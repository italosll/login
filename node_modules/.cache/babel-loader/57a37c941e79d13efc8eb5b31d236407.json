{"ast":null,"code":"var _jsxFileName = \"/home/italo/myhelpbuddy/login/src/pages/Login/index.js\";\nimport React, { useState } from 'react';\nimport './index.css';\nimport logo from '../../assets/images/logo.png';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nfunction change(errors, values) {\n  console.log(errors, values);\n\n  if (errors.email) {\n    console.log(errors.email);\n    return false;\n  } else if (errors.password) {\n    console.log(errors.password);\n    return false;\n  } else if (values.email !== \"\") {\n    return false;\n  } else if (values.password !== \"\") {\n    return false;\n  } else {\n    return true;\n  } // setAut(false)\n\n}\n\nfunction Login() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\"),\n      password: Yup.string().min(8, \"min 8\").required(\"Required\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      handleChange,\n      handleBlur\n    } = props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      style: {\n        display: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email\",\n      type: \"text\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email ? \"text-input error\" : \"text-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, errors.email), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      style: {\n        display: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password ? \"text-input error\" : \"text-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, errors.password), change(errors, values) && /*#__PURE__*/React.createElement(Link, {\n      to: \"/users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"VAI /\"), !change(errors, values) && /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"BARRADO/\"));\n  }));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/italo/myhelpbuddy/login/src/pages/Login/index.js"],"names":["React","useState","logo","Link","Formik","Yup","change","errors","values","console","log","email","password","Login","object","shape","string","required","min","props","touched","handleChange","handleBlur","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAIA,SAASC,MAAT,CAAgBC,MAAhB,EAAuBC,MAAvB,EAA8B;AAE9BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAmBC,MAAnB;;AACE,MAAGD,MAAM,CAACI,KAAV,EAAgB;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,KAAnB;AACA,WAAO,KAAP;AACD,GAHD,MAGM,IAAGJ,MAAM,CAACK,QAAV,EAAmB;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACK,QAAnB;AACA,WAAO,KAAP;AACD,GAHK,MAGA,IAAGJ,MAAM,CAACG,KAAP,KAAiB,EAApB,EAAwB;AAC5B,WAAO,KAAP;AACD,GAFK,MAEA,IAAGH,MAAM,CAACI,QAAP,KAAoB,EAAvB,EAA2B;AAC/B,WAAO,KAAP;AACD,GAFK,MAED;AACH,WAAO,IAAP;AACD,GAf2B,CAoB5B;;AACD;;AAED,SAASC,KAAT,GAAgB;AAIZ,sBAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGJ,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEF,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,QAAQ,EAAC;AAAtB,KADjB;AAGE,IAAA,gBAAgB,EAAEP,GAAG,CAACS,MAAJ,GAAaC,KAAb,CAAmB;AACnCJ,MAAAA,KAAK,EAAEN,GAAG,CAACW,MAAJ,GACJL,KADI,GAEJM,QAFI,CAEK,UAFL,CAD4B;AAKnCL,MAAAA,QAAQ,EAAEP,GAAG,CAACW,MAAJ,GACLE,GADK,CACD,CADC,EACC,OADD,EAELD,QAFK,CAEI,UAFJ;AALyB,KAAnB,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGE,KAAK,IAAI;AACR,UAAM;AACJX,MAAAA,MADI;AAEJY,MAAAA,OAFI;AAGJb,MAAAA,MAHI;AAIJc,MAAAA,YAJI;AAKJC,MAAAA;AALI,QAMFH,KANJ;AAOA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAME;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEf,MAAM,CAACG,KAHhB;AAIE,MAAA,QAAQ,EAAEU,YAJZ;AAKE,MAAA,MAAM,EAAEC,UALV;AAME,MAAA,SAAS,EACPf,MAAM,CAACI,KAAP,IAAgBS,OAAO,CAACT,KAAxB,GACI,kBADJ,GAEI,YATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAmBGJ,MAAM,CAACI,KAAP,IAAgBS,OAAO,CAACT,KAAxB,iBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCJ,MAAM,CAACI,KAAxC,CApBJ,eAuBE;AAAO,MAAA,OAAO,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEY,QAAAA,OAAO,EAAE;AAAX,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBF,eA0BE;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAEf,MAAM,CAACI,QAHhB;AAIE,MAAA,QAAQ,EAAES,YAJZ;AAKE,MAAA,MAAM,EAAEC,UALV;AAME,MAAA,SAAS,EACPf,MAAM,CAACK,QAAP,IAAmBQ,OAAO,CAACR,QAA3B,GACI,kBADJ,GAEI,YATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,EAuCGL,MAAM,CAACK,QAAP,IAAmBQ,OAAO,CAACR,QAA3B,iBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCL,MAAM,CAACK,QAAxC,CAxCJ,EAqDGN,MAAM,CAACC,MAAD,EAAQC,MAAR,CAAN,iBACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAtDJ,EAyDG,CAACF,MAAM,CAACC,MAAD,EAAQC,MAAR,CAAP,iBACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1DJ,CADF;AAuED,GA5FH,CAHI,CAFJ;AAuGH;;AAED,eAAeK,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport './index.css'\nimport logo from '../../assets/images/logo.png'\nimport { Link } from 'react-router-dom'\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\n\n\n\nfunction change(errors,values){\n\nconsole.log(errors,values);\n  if(errors.email){\n    console.log(errors.email)\n    return false;\n  }else if(errors.password){\n    console.log(errors.password)\n    return false;\n  }else if(values.email !== \"\" ){\n    return false;\n  }else if(values.password !== \"\" ){\n    return false;\n  }else{\n    return true;\n  }\n\n\n\n\n  // setAut(false)\n}\n\nfunction Login(){\n\n\n\n    return (\n\n        <div className=\"app\">\n\n\n    <Formik\n      initialValues={{ email: \"\", password:\"\" }}\n\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required(\"Required\"),\n\n        password: Yup.string()\n            .min(8,\"min 8\")\n            .required(\"Required\")\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          handleChange,\n          handleBlur,\n        } = props;\n        return (\n          <form>\n   \n\n            <label htmlFor=\"email\" style={{ display: \"block\" }}>\n              Email\n            </label>\n            <input\n              id=\"email\"\n              type=\"text\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={\n                errors.email && touched.email\n                  ? \"text-input error\"\n                  : \"text-input\"\n              }\n            />\n\n            {errors.email && touched.email && (\n              <div className=\"input-feedback\">{errors.email}</div>\n            )}\n\n            <label htmlFor=\"password\" style={{ display: \"block\" }}>\n              Password\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={\n                errors.password && touched.password\n                  ? \"text-input error\"\n                  : \"text-input\"\n              }\n            />\n\n            {errors.password && touched.password && (\n              <div className=\"input-feedback\">{errors.password}</div>\n            )}\n\n\n         \n            \n\n            \n\n              \n\n\n\n            {change(errors,values)&&(\n              <Link to=\"/users\" >VAI /</Link>\n            )}\n\n            {!change(errors,values) &&(\n              <Link to=\"/\">BARRADO/</Link>\n            )}\n\n\n\n            \n\n            \n\n\n          </form>\n        );\n      }}\n    </Formik>\n\n  </div>\n);\n    \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}