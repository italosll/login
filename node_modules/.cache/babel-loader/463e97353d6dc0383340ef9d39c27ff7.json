{"ast":null,"code":"var _jsxFileName = \"/home/italo/myhelpbuddy/login/src/pages/Login/index.js\";\nimport React from 'react';\nimport './index.css';\nimport logo from '../../assets/images/logo.png';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nfunction Login() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"Basic\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/jaredpalmer/formik\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Formik\"), \" \", \"Demo\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: async values => {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      alert(JSON.stringify(values, null, 2));\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n    } = props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      style: {\n        display: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email\",\n      placeholder: \"Enter your email\",\n      type: \"text\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email ? \"text-input error\" : \"text-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, errors.email), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"outline\",\n      onClick: handleReset,\n      disabled: !dirty || isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Submit\"));\n  }));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/italo/myhelpbuddy/login/src/pages/Login/index.js"],"names":["React","logo","Link","Formik","Yup","Login","email","values","Promise","resolve","setTimeout","alert","JSON","stringify","object","shape","string","required","props","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","display"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './index.css'\nimport logo from '../../assets/images/logo.png'\nimport { Link } from 'react-router-dom'\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\n\n\n\nfunction Login(){\n\n\n\n    return (\n\n        <div className=\"app\">\n    <h1>\n      Basic{\" \"}\n      <a\n        href=\"https://github.com/jaredpalmer/formik\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Formik\n      </a>{\" \"}\n      Demo\n    </h1>\n\n    <Formik\n      initialValues={{ email: \"\" }}\n      onSubmit={async values => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required(\"Required\")\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset\n        } = props;\n        return (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"email\" style={{ display: \"block\" }}>\n              Email\n            </label>\n            <input\n              id=\"email\"\n              placeholder=\"Enter your email\"\n              type=\"text\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={\n                errors.email && touched.email\n                  ? \"text-input error\"\n                  : \"text-input\"\n              }\n            />\n            {errors.email && touched.email && (\n              <div className=\"input-feedback\">{errors.email}</div>\n            )}\n\n            <button\n              type=\"button\"\n              className=\"outline\"\n              onClick={handleReset}\n              disabled={!dirty || isSubmitting}\n            >\n              Reset\n            </button>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n\n\n          </form>\n        );\n      }}\n    </Formik>\n\n  </div>\n);\n    \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}